require 'gosu'

SCREEN_HEIGHT = 1080
SCREEN_WIDTH = 1920

class Game < Gosu::Window
  def initialize
    super SCREEN_WIDTH, SCREEN_HEIGHT
    self.caption = "Our Game"

    @x = 0
    @background_width = 256
    @background_height = 256

    #@background_image = Gosu::Image.new("assets/Backgrounds/purple.png", :tileable => true)

    @player = Player.new
    @player.warp(960, 540)
  end

  def update
    if Gosu.button_down? Gosu::KB_LEFT or Gosu::button_down? Gosu::GP_LEFT
      @player.turn_left
    end
    if Gosu.button_down? Gosu::KB_RIGHT or Gosu::button_down? Gosu::GP_RIGHT
      @player.turn_right
    end
    if Gosu.button_down? Gosu::KB_UP or Gosu::button_down? Gosu::GP_BUTTON_0
      @player.accelerate
    end
    @player.move
  end

  def draw
    @player.draw
    #@background_image.draw(@x, 0, 0)


  end

  def button_down(id)
    if id == Gosu::KB_ESCAPE
      close
    else
      super
    end
  end

end

class Player
  def initialize
    @image = Gosu::Image.new("assets/PNG/playerShip1_blue.png")
    @x = @y = @vel_x = @vel_y = @angle = 0.0
    @score = 0
  end

  def warp(x, y)
    @x, @y = x, y
  end

  def turn_left
    @angle -= 4.5
  end

  def turn_right
    @angle += 4.5
  end

  def accelerate
    @vel_x += Gosu.offset_x(@angle, 0.5)
    @vel_y += Gosu.offset_y(@angle, 0.5)
  end

  def move
    @x += @vel_x
    @y += @vel_y

    if @x > SCREEN_WIDTH
      @x = SCREEN_WIDTH
    elsif @x < 0
      @x = 0
    end
    if @y > SCREEN_HEIGHT
      @y = SCREEN_HEIGHT
    elsif @y < 0
      @y = 0
    end

    @vel_x *= 0.95
    @vel_y *= 0.95
  end

  def draw
    @image.draw_rot(@x, @y, 1, @angle)
  end
end

Game.new.show